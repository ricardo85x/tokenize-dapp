/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyToken, MyTokenInterface } from "../MyToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "MinterAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "MinterRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenMinted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isMinter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280601981526020017f537570657220506f6720436170707563696e6f20546f6b656e000000000000008152506040518060400160405280600481526020017f5350433200000000000000000000000000000000000000000000000000000000815250816003908051906020019062000096929190620002bf565b508060049080519060200190620000af929190620002bf565b505050620000d2620000c6620000d860201b60201c565b620000e060201b60201c565b620004d3565b600033905090565b620000fb8160056200014160201b620009501790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b620001538282620001f460201b60201c565b1562000196576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200018d9062000419565b60405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000268576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200025f906200043b565b60405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828054620002cd906200046e565b90600052602060002090601f016020900481019282620002f157600085556200033d565b82601f106200030c57805160ff19168380011785556200033d565b828001600101855582156200033d579182015b828111156200033c5782518255916020019190600101906200031f565b5b5090506200034c919062000350565b5090565b5b808211156200036b57600081600090555060010162000351565b5090565b60006200037e601f836200045d565b91507f526f6c65733a206163636f756e7420616c72656164792068617320726f6c65006000830152602082019050919050565b6000620003c06022836200045d565b91507f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000602082019050818103600083015262000434816200036f565b9050919050565b600060208201905081810360008301526200045681620003b1565b9050919050565b600082825260208201905092915050565b600060028204905060018216806200048757607f821691505b602082108114156200049e576200049d620004a4565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b611c8580620004e36000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610288578063a9059cbb146102b8578063aa271e1a146102e8578063dd62ed3e14610318576100f5565b806370a082311461021457806395d89b4114610244578063983b2d5614610262578063986502751461027e576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806339509351146101b457806340c10f19146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610348565b60405161010f919061187a565b60405180910390f35b610132600480360381019061012d9190611309565b6103da565b60405161013f919061185f565b60405180910390f35b6101506103f8565b60405161015d9190611a1c565b60405180910390f35b610180600480360381019061017b91906112ba565b610402565b60405161018d919061185f565b60405180910390f35b61019e610503565b6040516101ab9190611a37565b60405180910390f35b6101ce60048036038101906101c99190611309565b610508565b6040516101db919061185f565b60405180910390f35b6101fe60048036038101906101f99190611309565b6105b4565b60405161020b919061185f565b60405180910390f35b61022e60048036038101906102299190611255565b610653565b60405161023b9190611a1c565b60405180910390f35b61024c61069b565b604051610259919061187a565b60405180910390f35b61027c60048036038101906102779190611255565b61072d565b005b610286610788565b005b6102a2600480360381019061029d9190611309565b61079a565b6040516102af919061185f565b60405180910390f35b6102d260048036038101906102cd9190611309565b61088e565b6040516102df919061185f565b60405180910390f35b61030260048036038101906102fd9190611255565b6108ac565b60405161030f919061185f565b60405180910390f35b610332600480360381019061032d919061127e565b6108c9565b60405161033f9190611a1c565b60405180910390f35b60606003805461035790611b80565b80601f016020809104026020016040519081016040528092919081815260200182805461038390611b80565b80156103d05780601f106103a5576101008083540402835291602001916103d0565b820191906000526020600020905b8154815290600101906020018083116103b357829003601f168201915b5050505050905090565b60006103ee6103e76109f8565b8484610a00565b6001905092915050565b6000600254905090565b600061040f848484610bcb565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061045a6109f8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d19061195c565b60405180910390fd5b6104f7856104e66109f8565b85846104f29190611ac4565b610a00565b60019150509392505050565b600090565b60006105aa6105156109f8565b8484600160006105236109f8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105a59190611a6e565b610a00565b6001905092915050565b60006105c66105c16109f8565b6108ac565b610605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fc9061191c565b60405180910390fd5b61060f8383610e4a565b507f2d8eb9b9558d4b5ef1d238622692f6156d5822009340e26ab15fac05d64c12f08383604051610641929190611836565b60405180910390a16001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546106aa90611b80565b80601f01602080910402602001604051908101604052809291908181526020018280546106d690611b80565b80156107235780601f106106f857610100808354040283529160200191610723565b820191906000526020600020905b81548152906001019060200180831161070657829003601f168201915b5050505050905090565b61073d6107386109f8565b6108ac565b61077c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107739061191c565b60405180910390fd5b61078581610eaf565b50565b6107986107936109f8565b610f09565b565b600080600160006107a96109f8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610866576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085d906119dc565b60405180910390fd5b6108836108716109f8565b85858461087e9190611ac4565b610a00565b600191505092915050565b60006108a261089b6109f8565b8484610bcb565b6001905092915050565b60006108c2826005610f6390919063ffffffff16565b9050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61095a8282610f63565b1561099a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610991906118bc565b60405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a67906119bc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ae0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad7906118dc565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610bbe9190611a1c565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c329061199c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca29061189c565b60405180910390fd5b610cb683838361102b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d33906118fc565b60405180910390fd5b8181610d489190611ac4565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dd89190611a6e565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e3c9190611a1c565b60405180910390a350505050565b6000610e5c610e576109f8565b6108ac565b610e9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e929061191c565b60405180910390fd5b610ea58383611030565b6001905092915050565b610ec381600561095090919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b610f1d81600561118490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fcb9061197c565b60405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611097906119fc565b60405180910390fd5b6110ac6000838361102b565b80600260008282546110be9190611a6e565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111139190611a6e565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111789190611a1c565b60405180910390a35050565b61118e8282610f63565b6111cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c49061193c565b60405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008135905061123a81611c21565b92915050565b60008135905061124f81611c38565b92915050565b60006020828403121561126757600080fd5b60006112758482850161122b565b91505092915050565b6000806040838503121561129157600080fd5b600061129f8582860161122b565b92505060206112b08582860161122b565b9150509250929050565b6000806000606084860312156112cf57600080fd5b60006112dd8682870161122b565b93505060206112ee8682870161122b565b92505060406112ff86828701611240565b9150509250925092565b6000806040838503121561131c57600080fd5b600061132a8582860161122b565b925050602061133b85828601611240565b9150509250929050565b61134e81611af8565b82525050565b61135d81611b0a565b82525050565b600061136e82611a52565b6113788185611a5d565b9350611388818560208601611b4d565b61139181611c10565b840191505092915050565b60006113a9602383611a5d565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061140f601f83611a5d565b91507f526f6c65733a206163636f756e7420616c72656164792068617320726f6c65006000830152602082019050919050565b600061144f602283611a5d565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114b5602683611a5d565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061151b603083611a5d565b91507f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766560008301527f20746865204d696e74657220726f6c65000000000000000000000000000000006020830152604082019050919050565b6000611581602183611a5d565b91507f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c60008301527f65000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006115e7602883611a5d565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b600061164d602283611a5d565b91507f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006116b3602583611a5d565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611719602483611a5d565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061177f602583611a5d565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006117e5601f83611a5d565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b61182181611b36565b82525050565b61183081611b40565b82525050565b600060408201905061184b6000830185611345565b6118586020830184611818565b9392505050565b60006020820190506118746000830184611354565b92915050565b600060208201905081810360008301526118948184611363565b905092915050565b600060208201905081810360008301526118b58161139c565b9050919050565b600060208201905081810360008301526118d581611402565b9050919050565b600060208201905081810360008301526118f581611442565b9050919050565b60006020820190508181036000830152611915816114a8565b9050919050565b600060208201905081810360008301526119358161150e565b9050919050565b6000602082019050818103600083015261195581611574565b9050919050565b60006020820190508181036000830152611975816115da565b9050919050565b6000602082019050818103600083015261199581611640565b9050919050565b600060208201905081810360008301526119b5816116a6565b9050919050565b600060208201905081810360008301526119d58161170c565b9050919050565b600060208201905081810360008301526119f581611772565b9050919050565b60006020820190508181036000830152611a15816117d8565b9050919050565b6000602082019050611a316000830184611818565b92915050565b6000602082019050611a4c6000830184611827565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611a7982611b36565b9150611a8483611b36565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ab957611ab8611bb2565b5b828201905092915050565b6000611acf82611b36565b9150611ada83611b36565b925082821015611aed57611aec611bb2565b5b828203905092915050565b6000611b0382611b16565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611b6b578082015181840152602081019050611b50565b83811115611b7a576000848401525b50505050565b60006002820490506001821680611b9857607f821691505b60208210811415611bac57611bab611be1565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b611c2a81611af8565b8114611c3557600080fd5b50565b611c4181611b36565b8114611c4c57600080fd5b5056fea264697066735822122009e9d9cd62ff92add938b32df7143173acf13f66313190163ebea71dee2e4fd864736f6c63430008000033";

export class MyToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyToken> {
    return super.deploy(overrides || {}) as Promise<MyToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MyToken {
    return super.attach(address) as MyToken;
  }
  connect(signer: Signer): MyToken__factory {
    return super.connect(signer) as MyToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new utils.Interface(_abi) as MyTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyToken {
    return new Contract(address, _abi, signerOrProvider) as MyToken;
  }
}
