/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { KycContract, KycContractInterface } from "../KycContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "KycPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "buyKyc",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "kycCompleted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kycPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setKycCompleted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountInWei",
        type: "uint256",
      },
    ],
    name: "setKycPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setKycRevoked",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawKyc",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600a60025534801561001557600080fd5b5060006100266100c960201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100d1565b600033905090565b610e60806100e06000396000f3fe6080604052600436106100915760003560e01c8063c3dc6f3711610059578063c3dc6f3714610155578063dc3958cc1461016c578063df235fe414610195578063f2ca3013146101d2578063f2fde38b146101dc57610091565b80631289cea0146100965780634f50b79d146100bf57806370c9aedd146100ea578063715018a6146101135780638da5cb5b1461012a575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610a5d565b610205565b005b3480156100cb57600080fd5b506100d46102ce565b6040516100e19190610d76565b60405180910390f35b3480156100f657600080fd5b50610111600480360381019061010c9190610a34565b6102d4565b005b34801561011f57600080fd5b506101286103e4565b005b34801561013657600080fd5b5061013f61051e565b60405161014c9190610c4e565b60405180910390f35b34801561016157600080fd5b5061016a610547565b005b34801561017857600080fd5b50610193600480360381019061018e9190610a34565b610655565b005b3480156101a157600080fd5b506101bc60048036038101906101b79190610a34565b61072c565b6040516101c99190610cbb565b60405180910390f35b6101da610782565b005b3480156101e857600080fd5b5061020360048036038101906101fe9190610a34565b610859565b005b61020d610a02565b73ffffffffffffffffffffffffffffffffffffffff1661022b61051e565b73ffffffffffffffffffffffffffffffffffffffff1614610281576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027890610cf6565b60405180910390fd5b600081116102c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bb90610d16565b60405180910390fd5b8060028190555050565b60025481565b6102dc610a02565b73ffffffffffffffffffffffffffffffffffffffff166102fa61051e565b73ffffffffffffffffffffffffffffffffffffffff1614610350576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034790610cf6565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f967489f2d72885d325edf0cf0d77e9deb9d88404866e7943bfb38cca6ee741948160006040516103d9929190610c69565b60405180910390a150565b6103ec610a02565b73ffffffffffffffffffffffffffffffffffffffff1661040a61051e565b73ffffffffffffffffffffffffffffffffffffffff1614610460576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045790610cf6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61054f610a02565b73ffffffffffffffffffffffffffffffffffffffff1661056d61051e565b73ffffffffffffffffffffffffffffffffffffffff16146105c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ba90610cf6565b60405180910390fd5b60004790506000811161060b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060290610d56565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610651573d6000803e3d6000fd5b5050565b61065d610a02565b73ffffffffffffffffffffffffffffffffffffffff1661067b61051e565b73ffffffffffffffffffffffffffffffffffffffff16146106d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c890610cf6565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6002543410156107c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107be90610d36565b60405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f967489f2d72885d325edf0cf0d77e9deb9d88404866e7943bfb38cca6ee74194333460405161084f929190610c92565b60405180910390a1565b610861610a02565b73ffffffffffffffffffffffffffffffffffffffff1661087f61051e565b73ffffffffffffffffffffffffffffffffffffffff16146108d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cc90610cf6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610945576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093c90610cd6565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600081359050610a1981610dfc565b92915050565b600081359050610a2e81610e13565b92915050565b600060208284031215610a4657600080fd5b6000610a5484828501610a0a565b91505092915050565b600060208284031215610a6f57600080fd5b6000610a7d84828501610a1f565b91505092915050565b610a8f81610da2565b82525050565b610a9e81610db4565b82525050565b610aad81610dea565b82525050565b6000610ac0602683610d91565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610b26602083610d91565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000610b66601f83610d91565b91507f796f752063616e6e6f742073657420746865206b796320666f722066726565006000830152602082019050919050565b6000610ba6602683610d91565b91507f596f75206e65656420746f2073656e64206d6f7265206d6f6e657920746f206260008301527f7579206b796300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610c0c601683610d91565b91507f6e6f7468696e6720746f2077697468647261772e2e2e000000000000000000006000830152602082019050919050565b610c4881610de0565b82525050565b6000602082019050610c636000830184610a86565b92915050565b6000604082019050610c7e6000830185610a86565b610c8b6020830184610aa4565b9392505050565b6000604082019050610ca76000830185610a86565b610cb46020830184610c3f565b9392505050565b6000602082019050610cd06000830184610a95565b92915050565b60006020820190508181036000830152610cef81610ab3565b9050919050565b60006020820190508181036000830152610d0f81610b19565b9050919050565b60006020820190508181036000830152610d2f81610b59565b9050919050565b60006020820190508181036000830152610d4f81610b99565b9050919050565b60006020820190508181036000830152610d6f81610bff565b9050919050565b6000602082019050610d8b6000830184610c3f565b92915050565b600082825260208201905092915050565b6000610dad82610dc0565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610df582610de0565b9050919050565b610e0581610da2565b8114610e1057600080fd5b50565b610e1c81610de0565b8114610e2757600080fd5b5056fea264697066735822122093606a112c10354bdb9cc5af4e5fb452147885f0f13288a6c07ade48dd3eec1664736f6c63430008000033";

export class KycContract__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KycContract> {
    return super.deploy(overrides || {}) as Promise<KycContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): KycContract {
    return super.attach(address) as KycContract;
  }
  connect(signer: Signer): KycContract__factory {
    return super.connect(signer) as KycContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KycContractInterface {
    return new utils.Interface(_abi) as KycContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KycContract {
    return new Contract(address, _abi, signerOrProvider) as KycContract;
  }
}
