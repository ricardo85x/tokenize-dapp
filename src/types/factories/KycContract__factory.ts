/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { KycContract, KycContractInterface } from "../KycContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "KycPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "buyKyc",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "clubBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "kycCompleted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kycPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "members",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setKycCompleted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountInWei",
        type: "uint256",
      },
    ],
    name: "setKycPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setKycRevoked",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawKyc",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600a60025534801561001557600080fd5b5060006100266100c960201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100d1565b600033905090565b6112c5806100e06000396000f3fe6080604052600436106100a75760003560e01c8063bdd4d18d11610064578063bdd4d18d14610196578063c3dc6f37146101c1578063dc3958cc146101d8578063df235fe414610201578063f2ca30131461023e578063f2fde38b14610248576100a7565b80631289cea0146100ac5780633d65de44146100d55780634f50b79d1461010057806370c9aedd1461012b578063715018a6146101545780638da5cb5b1461016b575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190610d60565b610271565b005b3480156100e157600080fd5b506100ea61033a565b6040516100f79190611139565b60405180910390f35b34801561010c57600080fd5b50610115610342565b6040516101229190611139565b60405180910390f35b34801561013757600080fd5b50610152600480360381019061014d9190610d37565b610348565b005b34801561016057600080fd5b50610169610503565b005b34801561017757600080fd5b5061018061063d565b60405161018d9190610fd1565b60405180910390f35b3480156101a257600080fd5b506101ab610666565b6040516101b89190611139565b60405180910390f35b3480156101cd57600080fd5b506101d661066c565b005b3480156101e457600080fd5b506101ff60048036038101906101fa9190610d37565b61077a565b005b34801561020d57600080fd5b5061022860048036038101906102239190610d37565b6108fc565b604051610235919061103e565b60405180910390f35b610246610952565b005b34801561025457600080fd5b5061026f600480360381019061026a9190610d37565b610ad4565b005b610279610b5c565b73ffffffffffffffffffffffffffffffffffffffff1661029761063d565b73ffffffffffffffffffffffffffffffffffffffff16146102ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e490611099565b60405180910390fd5b60008111610330576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610327906110d9565b60405180910390fd5b8060028190555050565b600047905090565b60025481565b610350610b5c565b73ffffffffffffffffffffffffffffffffffffffff1661036e61063d565b73ffffffffffffffffffffffffffffffffffffffff16146103c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bb90611099565b60405180910390fd5b60001515600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610457576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044e906110b9565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600360008154809291906104c1906111e9565b91905055507f967489f2d72885d325edf0cf0d77e9deb9d88404866e7943bfb38cca6ee741948160006040516104f8929190610fec565b60405180910390a150565b61050b610b5c565b73ffffffffffffffffffffffffffffffffffffffff1661052961063d565b73ffffffffffffffffffffffffffffffffffffffff161461057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611099565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b610674610b5c565b73ffffffffffffffffffffffffffffffffffffffff1661069261063d565b73ffffffffffffffffffffffffffffffffffffffff16146106e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106df90611099565b60405180910390fd5b600047905060008111610730576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072790611119565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610776573d6000803e3d6000fd5b5050565b610782610b5c565b73ffffffffffffffffffffffffffffffffffffffff166107a061063d565b73ffffffffffffffffffffffffffffffffffffffff16146107f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ed90611099565b60405180910390fd5b60011515600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610889576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088090611079565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600360008154809291906108f4906111bf565b919050555050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600254341015610997576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098e906110f9565b60405180910390fd5b60001515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610a2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a21906110b9565b60405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060036000815480929190610a94906111e9565b91905055507f967489f2d72885d325edf0cf0d77e9deb9d88404866e7943bfb38cca6ee741943334604051610aca929190611015565b60405180910390a1565b610adc610b5c565b73ffffffffffffffffffffffffffffffffffffffff16610afa61063d565b73ffffffffffffffffffffffffffffffffffffffff1614610b50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4790611099565b60405180910390fd5b610b5981610b64565b50565b600033905090565b610b6c610b5c565b73ffffffffffffffffffffffffffffffffffffffff16610b8a61063d565b73ffffffffffffffffffffffffffffffffffffffff1614610be0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd790611099565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4790611059565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081359050610d1c81611261565b92915050565b600081359050610d3181611278565b92915050565b600060208284031215610d4957600080fd5b6000610d5784828501610d0d565b91505092915050565b600060208284031215610d7257600080fd5b6000610d8084828501610d22565b91505092915050565b610d9281611165565b82525050565b610da181611177565b82525050565b610db0816111ad565b82525050565b6000610dc3602683611154565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e29600c83611154565b91507f4e6f742061206d656d62657200000000000000000000000000000000000000006000830152602082019050919050565b6000610e69602083611154565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000610ea9600e83611154565b91507f416c7265616479206d656d6265720000000000000000000000000000000000006000830152602082019050919050565b6000610ee9601f83611154565b91507f796f752063616e6e6f742073657420746865206b796320666f722066726565006000830152602082019050919050565b6000610f29602683611154565b91507f596f75206e65656420746f2073656e64206d6f7265206d6f6e657920746f206260008301527f7579206b796300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f8f601683611154565b91507f6e6f7468696e6720746f2077697468647261772e2e2e000000000000000000006000830152602082019050919050565b610fcb816111a3565b82525050565b6000602082019050610fe66000830184610d89565b92915050565b60006040820190506110016000830185610d89565b61100e6020830184610da7565b9392505050565b600060408201905061102a6000830185610d89565b6110376020830184610fc2565b9392505050565b60006020820190506110536000830184610d98565b92915050565b6000602082019050818103600083015261107281610db6565b9050919050565b6000602082019050818103600083015261109281610e1c565b9050919050565b600060208201905081810360008301526110b281610e5c565b9050919050565b600060208201905081810360008301526110d281610e9c565b9050919050565b600060208201905081810360008301526110f281610edc565b9050919050565b6000602082019050818103600083015261111281610f1c565b9050919050565b6000602082019050818103600083015261113281610f82565b9050919050565b600060208201905061114e6000830184610fc2565b92915050565b600082825260208201905092915050565b600061117082611183565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006111b8826111a3565b9050919050565b60006111ca826111a3565b915060008214156111de576111dd611232565b5b600182039050919050565b60006111f4826111a3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561122757611226611232565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61126a81611165565b811461127557600080fd5b50565b611281816111a3565b811461128c57600080fd5b5056fea2646970667358221220c89e8be1e9e10381f447806a6262a9a428a91c5d26d37d33c2f1f41f83c4e87e64736f6c63430008000033";

export class KycContract__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KycContract> {
    return super.deploy(overrides || {}) as Promise<KycContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): KycContract {
    return super.attach(address) as KycContract;
  }
  connect(signer: Signer): KycContract__factory {
    return super.connect(signer) as KycContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KycContractInterface {
    return new utils.Interface(_abi) as KycContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KycContract {
    return new Contract(address, _abi, signerOrProvider) as KycContract;
  }
}
