/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyTokenSale, MyTokenSaleInterface } from "../MyTokenSale";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "contract KycContract",
        name: "_kyc",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "purchaser",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensPurchased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wallet",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weiRaised",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011cb380380620011cb8339818101604052810190620000379190620002a1565b83838360016000819055506000831162000088576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200007f9062000441565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620000fb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000f29062000463565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200016e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000165906200041f565b60405180910390fd5b8260038190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505062000578565b600081519050620002568162000510565b92915050565b6000815190506200026d816200052a565b92915050565b600081519050620002848162000544565b92915050565b6000815190506200029b816200055e565b92915050565b60008060008060808587031215620002b857600080fd5b6000620002c8878288016200028a565b9450506020620002db8782880162000245565b9350506040620002ee878288016200025c565b9250506060620003018782880162000273565b91505092959194509250565b60006200031c60248362000485565b91507f43726f776473616c653a20746f6b656e20697320746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006200038460148362000485565b91507f43726f776473616c653a207261746520697320300000000000000000000000006000830152602082019050919050565b6000620003c660258362000485565b91507f43726f776473616c653a2077616c6c657420697320746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600060208201905081810360008301526200043a816200030d565b9050919050565b600060208201905081810360008301526200045c8162000375565b9050919050565b600060208201905081810360008301526200047e81620003b7565b9050919050565b600082825260208201905092915050565b6000620004a382620004e6565b9050919050565b6000620004b782620004e6565b9050919050565b6000620004cb8262000496565b9050919050565b6000620004df8262000496565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200051b81620004aa565b81146200052757600080fd5b50565b6200053581620004be565b81146200054157600080fd5b50565b6200054f81620004d2565b81146200055b57600080fd5b50565b620005698162000506565b81146200057557600080fd5b50565b610c4380620005886000396000f3fe60806040526004361061004e5760003560e01c80632c4e722e1461006a5780634042b66f14610095578063521eb273146100c0578063ec8ac4d8146100eb578063fc0c546a1461010757610065565b366100655761006361005e610132565b61013a565b005b600080fd5b34801561007657600080fd5b5061007f610260565b60405161008c9190610a27565b60405180910390f35b3480156100a157600080fd5b506100aa61026a565b6040516100b79190610a27565b60405180910390f35b3480156100cc57600080fd5b506100d5610274565b6040516100e29190610908565b60405180910390f35b61010560048036038101906101009190610693565b61013a565b005b34801561011357600080fd5b5061011c61029e565b604051610129919061094c565b60405180910390f35b600033905090565b60026000541415610180576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610177906109e7565b60405180910390fd5b6002600081905550600034905061019782826102c8565b60006101a28261040a565b90506101b98260045461042d90919063ffffffff16565b6004819055506101c98382610443565b8273ffffffffffffffffffffffffffffffffffffffff166101e8610132565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b848460405161022f929190610a42565b60405180910390a36102418383610451565b610249610455565b61025383836104c0565b5050600160008190555050565b6000600354905090565b6000600454905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102d282826104c4565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663df235fe4336040518263ffffffff1660e01b815260040161032d91906108ed565b60206040518083038186803b15801561034557600080fd5b505afa158015610359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037d91906106bc565b6103bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b390610967565b60405180910390fd5b6103c4610260565b811015610406576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fd906109c7565b60405180910390fd5b5050565b6000610426610417610260565b8361057c90919063ffffffff16565b9050919050565b6000818361043b9190610a7c565b905092915050565b61044d8282610592565b5050565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156104bd573d6000803e3d6000fd5b50565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052b90610987565b60405180910390fd5b6000811415610578576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056f90610a07565b60405180910390fd5b5050565b6000818361058a9190610ad2565b905092915050565b61059a61029e565b73ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff1660e01b81526004016105d4929190610923565b602060405180830381600087803b1580156105ee57600080fd5b505af1158015610602573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062691906106bc565b610665576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065c906109a7565b60405180910390fd5b5050565b60008135905061067881610bdf565b92915050565b60008151905061068d81610bf6565b92915050565b6000602082840312156106a557600080fd5b60006106b384828501610669565b91505092915050565b6000602082840312156106ce57600080fd5b60006106dc8482850161067e565b91505092915050565b6106ee81610b15565b82525050565b6106fd81610b03565b82525050565b61070c81610b5d565b82525050565b600061071f602783610a6b565b91507f4b5943206e6f7420636f6d706c657465642c207075726368617365206e6f742060008301527f616c6c6f776564000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610785602a83610a6b565b91507f43726f776473616c653a2062656e656669636961727920697320746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b60006107eb601f83610a6b565b91507f4d696e74656443726f776473616c653a206d696e74696e67206661696c6564006000830152602082019050919050565b600061082b601c83610a6b565b91507f4e6f7420656e6f756768206d6f6e657920746f207075726368617365000000006000830152602082019050919050565b600061086b601f83610a6b565b91507f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006000830152602082019050919050565b60006108ab601983610a6b565b91507f43726f776473616c653a20776569416d6f756e742069732030000000000000006000830152602082019050919050565b6108e781610b53565b82525050565b600060208201905061090260008301846106f4565b92915050565b600060208201905061091d60008301846106e5565b92915050565b600060408201905061093860008301856106f4565b61094560208301846108de565b9392505050565b60006020820190506109616000830184610703565b92915050565b6000602082019050818103600083015261098081610712565b9050919050565b600060208201905081810360008301526109a081610778565b9050919050565b600060208201905081810360008301526109c0816107de565b9050919050565b600060208201905081810360008301526109e08161081e565b9050919050565b60006020820190508181036000830152610a008161085e565b9050919050565b60006020820190508181036000830152610a208161089e565b9050919050565b6000602082019050610a3c60008301846108de565b92915050565b6000604082019050610a5760008301856108de565b610a6460208301846108de565b9392505050565b600082825260208201905092915050565b6000610a8782610b53565b9150610a9283610b53565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ac757610ac6610b81565b5b828201905092915050565b6000610add82610b53565b9150610ae883610b53565b925082610af857610af7610bb0565b5b828204905092915050565b6000610b0e82610b33565b9050919050565b6000610b2082610b33565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b6882610b6f565b9050919050565b6000610b7a82610b33565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b610be881610b03565b8114610bf357600080fd5b50565b610bff81610b27565b8114610c0a57600080fd5b5056fea26469706673582212202aa9900050aac8c1f99ed744a65c78fa8803b5484b0727f08ee438e7c1dc271364736f6c63430008000033";

export class MyTokenSale__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    rate: BigNumberish,
    wallet: string,
    token: string,
    _kyc: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyTokenSale> {
    return super.deploy(
      rate,
      wallet,
      token,
      _kyc,
      overrides || {}
    ) as Promise<MyTokenSale>;
  }
  getDeployTransaction(
    rate: BigNumberish,
    wallet: string,
    token: string,
    _kyc: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      rate,
      wallet,
      token,
      _kyc,
      overrides || {}
    );
  }
  attach(address: string): MyTokenSale {
    return super.attach(address) as MyTokenSale;
  }
  connect(signer: Signer): MyTokenSale__factory {
    return super.connect(signer) as MyTokenSale__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenSaleInterface {
    return new utils.Interface(_abi) as MyTokenSaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyTokenSale {
    return new Contract(address, _abi, signerOrProvider) as MyTokenSale;
  }
}
