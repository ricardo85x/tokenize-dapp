{"version":3,"sources":["contexts/BaseContext.tsx","components/Header.tsx","components/Greetings.tsx","components/ClubComponent.tsx","components/BuyTokenComponent.tsx","components/MineTokenComponent.tsx","App.tsx","theme.ts","index.tsx"],"names":["BaseContext","createContext","BaseContextProvider","children","useState","provider","setProvider","accounts","setAccounts","owner","setOwner","isOwner","setIsOwner","currentSupply","setCurrentSupply","myTokenContract","setMyTokenContract","myTokenSaleContract","setMyTokenSaleContract","kycContract","setKycContract","tokenSymbol","setTokenSymbol","loaded","setLoaded","inList","setInList","tokenRate","setTokenRate","myTokenBalance","setMyTokenBalance","clubRate","setClubRate","contextValue","updateCurrentSupply","_myTokenContract","a","totalSupply","value","toNumber","updateUserTokens","_contract","_account","qty","balanceOf","_balance","toast","info","listenToTokenTransfer","fromBlock","eventFromUser","filters","Transfer","on","args","currentBlock","length","blockNumber","listenToTokenSupply","_myTokenSaleContract","console","log","connectWeb3","useCallback","window","ethereum","ethers","providers","Web3Provider","request","method","signer","getSigner","_kycContract","Contract","Kyc","address","abi","MyTokenSale","MyToken","getBlockNumber","symbol","kycCompleted","allowed","ownerAddress","toLowerCase","rate","_rate","toString","kycPrice","_clubRate","useEffect","Provider","useBaseContext","useContext","Header","substr","bg","width","align","justify","p","maxW","fontSize","fontWeight","borderRadius","direction","mr","color","Greetings","message","ClubComponent","useForm","register","handleSubmit","joinClub","_address","littleAddress","warning","setKycCompleted","buyKyc","error","handleAddInList","data","kycAddress","handleAddMySelf","spacing","as","onSubmit","size","colorScheme","type","label","mt","BuyTokenComponent","handleBuyTokens","tokens","buyTokens","BigNumber","from","defaultValue","utils","formatUnits","MineTokenComponent","handleMineTokens","mint","App","w","h","mh","pb","m","theme","extendTheme","styles","global","body","ReactDOM","render","StrictMode","resetCSS","document","getElementById"],"mappings":"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","file":"static/js/main.1eba137b.chunk.js","sourcesContent":["import { useCallback, useEffect, createContext, ReactNode, useContext, useState } from \"react\"\n\nimport { Web3Provider, ethers } from \"../lib/getWeb3\"\n\nimport MyToken from \"../hardhat-deploy/ganache/MyToken.json\";\nimport MyTokenSale from \"../hardhat-deploy/ganache/MyTokenSale.json\";\nimport Kyc from \"../hardhat-deploy/ganache/KycContract.json\";\n\nimport { MyToken as MyTokenProps } from \"../../../src/types/MyToken\"\nimport { MyTokenSale as MyTokenSaleProps } from \"../../../src/types/MyTokenSale\"\nimport { KycContract as KycProps } from \"../../../src/types/KycContract\"\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ninterface BaseContextDataProps {\n\n    provider: Web3Provider|undefined\n    setProvider: (_provider: Web3Provider) => void;\n\n    accounts: string[]|undefined\n    setAccounts: (_accounts: string[]) => void;\n\n    owner: string;\n    setOwner: (_owner: string) => void;\n\n    isOwner: boolean;\n    setIsOwner: (_isOwner: boolean) => void;\n\n    currentSupply: number;\n    setCurrentSupply: (_currentSupply: number) => void;\n\n    myTokenContract: MyTokenProps|undefined;\n    setMyTokenContract: (_myTokenContract: MyTokenProps) => void;\n\n    myTokenSaleContract: MyTokenSaleProps|undefined;\n    setMyTokenSaleContract: (_myTokenSaleContract: MyTokenSaleProps) => void;\n\n    kycContract: KycProps|undefined;\n    setKycContract: (_kycContract: KycProps) => void;\n\n    tokenSymbol: string;\n    setTokenSymbol: (_tokenSymbol: string) => void;\n\n    loaded: boolean;\n    setLoaded: (_loaded: boolean) => void;\n\n    inList: boolean;\n    setInList: (_inList: boolean) => void;\n\n    tokenRate: string;\n    setTokenRate: (_tokenRate: string) => void;\n\n    clubRate: string;\n    setClubRate: (_clubRate: string) => void;\n\n    myTokenBalance: number;\n    setMyTokenBalance: (_myTokenBalance: number) => void;\n\n    listenToTokenTransfer: (_contract: MyTokenProps, _account: string, fromBlock: number) => void;\n    listenToTokenSupply: (_myTokenContract: MyTokenProps, _myTokenSaleContract: MyTokenSaleProps, fromBlock: number) => void;\n    updateCurrentSupply: (_myTokenContract: MyTokenProps) => void;\n    updateUserTokens: (_contract: MyTokenProps, _account: string, qty: number) => void;\n}\n\ninterface BaseProviderProps {\n    children: ReactNode;\n}\n\nconst BaseContext = createContext({} as BaseContextDataProps)\n\nexport function BaseContextProvider({ children }: BaseProviderProps) {\n\n    \n    const [provider, setProvider] = useState<Web3Provider>()\n    const [accounts, setAccounts] = useState<string[]>()\n    const [owner, setOwner] = useState<string>(\"_\")\n    const [isOwner, setIsOwner] = useState<boolean>(false);\n    const [currentSupply, setCurrentSupply] = useState<number>(0);\n\n    const [myTokenContract, setMyTokenContract] = useState<MyTokenProps>()\n    const [myTokenSaleContract, setMyTokenSaleContract] = useState<MyTokenSaleProps>()\n    const [kycContract, setKycContract] = useState<KycProps>()\n    const [tokenSymbol, setTokenSymbol] = useState<string>(\"\")\n\n    const [loaded, setLoaded] = useState<boolean>(false)\n    const [inList, setInList] = useState<boolean>(false)\n    const [tokenRate, setTokenRate] = useState<string>(\"0\")\n    const [myTokenBalance, setMyTokenBalance] = useState<number>(0)\n    const [clubRate, setClubRate] = useState<string>(\"0\")\n\n    const contextValue : BaseContextDataProps = { \n        provider,setProvider,\n        accounts,setAccounts,\n        owner, setOwner,\n        isOwner, setIsOwner,\n        currentSupply, setCurrentSupply,\n        myTokenContract, setMyTokenContract,\n        myTokenSaleContract, setMyTokenSaleContract,\n        kycContract, setKycContract,\n        tokenSymbol, setTokenSymbol,\n        loaded, setLoaded,\n        inList, setInList,\n        tokenRate, setTokenRate,\n        clubRate, setClubRate,\n        myTokenBalance, setMyTokenBalance,\n\n        updateCurrentSupply: async function(_myTokenContract: MyTokenProps) {\n            const value = await _myTokenContract.totalSupply()\n            contextValue.setCurrentSupply(value.toNumber())\n        },\n\n        updateUserTokens: async function(_contract: MyTokenProps, _account: string, qty: number = 0) {\n\n            const _balance = await _contract.balanceOf(_account)\n            contextValue.setMyTokenBalance(_balance.toNumber())\n            contextValue.myTokenContract && contextValue.updateCurrentSupply(contextValue.myTokenContract)\n    \n            if (qty !== 0) {\n                toast.info(`${qty} tokens was addeded to your account`)\n            }\n        },\n\n        listenToTokenTransfer: async function(_contract: MyTokenProps, _account: string, fromBlock: number) {\n\n            const eventFromUser = _contract.filters.Transfer(null, _account)\n    \n            _contract.on(eventFromUser, (...args: any[]) => {\n                const currentBlock = args[args.length - 1].blockNumber as number;\n                if (currentBlock > fromBlock) {\n                    contextValue.updateUserTokens(_contract, _account, args[2])\n                }\n            })\n        },\n\n        listenToTokenSupply: async function(_myTokenContract: MyTokenProps, _myTokenSaleContract: MyTokenSaleProps, fromBlock: number) {\n        \n            _myTokenSaleContract.on(\"TokensPurchased\", (...args: any[]) => {\n    \n                const currentBlock = args[args.length - 1].blockNumber as number;\n                if (currentBlock > fromBlock) {\n                    console.log(\"listenToTokenSupply:\", args);\n                    contextValue.updateCurrentSupply(_myTokenContract)\n                }\n            })\n    \n            _myTokenContract.on(\"tokenMinted\", (...args: any[]) => {\n                const currentBlock = args[args.length - 1].blockNumber as number;\n                if (currentBlock > fromBlock) {\n                    contextValue.updateCurrentSupply(_myTokenContract)\n                }\n            })\n        }\n\n    } \n\n    const connectWeb3 = useCallback(async () => {\n\n        if (!contextValue.loaded && !!contextValue.owner && !!window.ethereum && !accounts) {\n\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n\n            const accounts = await window.ethereum.request!({ method: 'eth_requestAccounts' });\n\n            if (provider && accounts) {\n\n                contextValue.setProvider(provider)\n                contextValue.setAccounts(accounts)\n\n                const signer = provider.getSigner();\n                const _kycContract = new ethers.Contract(Kyc.address, Kyc.abi, signer) as KycProps\n                const _myTokenSaleContract = new ethers.Contract(MyTokenSale.address, MyTokenSale.abi, signer) as MyTokenSaleProps\n                const _myTokenContract = new ethers.Contract(MyToken.address, MyToken.abi, signer) as MyTokenProps\n\n                contextValue.setMyTokenContract(_myTokenContract);\n                contextValue.setMyTokenSaleContract(_myTokenSaleContract);\n                contextValue.setKycContract(_kycContract);\n\n                // event listeners\n                contextValue.listenToTokenTransfer(_myTokenContract, accounts[0], await provider.getBlockNumber())\n                contextValue.listenToTokenSupply(_myTokenContract, _myTokenSaleContract, await provider.getBlockNumber())\n\n                //\n                contextValue.setTokenSymbol(await _myTokenContract.symbol())\n\n                const allowed = await _kycContract.kycCompleted(accounts[0]);\n                contextValue.setInList(allowed)\n\n                const ownerAddress = await _kycContract.owner()\n\n                contextValue.setOwner(ownerAddress)\n                contextValue.setIsOwner(ownerAddress.toLowerCase() === accounts[0].toLowerCase())\n                contextValue.updateCurrentSupply(_myTokenContract);\n\n                const _rate = await _myTokenSaleContract.rate()\n                contextValue.setTokenRate(_rate.toString())\n\n                contextValue.updateUserTokens(_myTokenContract, accounts[0], 0)\n\n                const _clubRate = await _kycContract.kycPrice()\n                contextValue.setClubRate(_clubRate.toString())\n\n                if (accounts && accounts.length > 0) {\n                    contextValue.setLoaded(true)\n                }\n            }\n        } \n    }, [contextValue.accounts, contextValue.provider, contextValue.loaded])\n\n    useEffect(() => {\n        connectWeb3(); \n    }, [connectWeb3])\n\n\n    return (\n        <BaseContext.Provider value={contextValue}>\n            {children}\n        </BaseContext.Provider>\n    )\n}\n\nexport const useBaseContext = () => useContext(BaseContext)\n","import { Box, Flex, Text } from \"@chakra-ui/react\"\nimport { useBaseContext } from \"../contexts/BaseContext\"\n\nexport function Header() {\n\n    const {\n        accounts, inList, myTokenBalance\n    } = useBaseContext()\n\n    const address = accounts ?\n        `${accounts[0].substr(0, 5)}...${accounts[0].substr(-5)}` :\n        \"0x000...0000\"\n\n    return (\n        <Box\n            bg=\"#2F2F2F\"\n            width=\"100%\"\n            align=\"center\"\n        >\n            <Flex\n                justify=\"space-between\"\n                p=\"15\"\n                align=\"center\"\n                maxW={1030}\n            >\n                <Text fontSize=\"34\" fontWeight=\"bold\">Pog Token Sale</Text>\n\n                <Flex bg=\"black\" p=\"3\" borderRadius=\"10\" fontWeight=\"bold\" align=\"flex-end\" justify=\"center\" direction=\"column\">\n                    <Text fontSize=\"15\" >{address}</Text>\n                    <Flex direction=\"row\">\n                        {inList ? (\n                            <Text fontSize=\"12\" mr=\"1\" color=\"green.500\">approved</Text>\n                        ) : (\n                            <Text fontSize=\"12\" mr=\"1\" color=\"red.500\">not approved</Text>\n                        )}\n                        <Text fontSize=\"12\" color=\"blue.500\">{myTokenBalance} SPX</Text>\n                    </Flex>\n                </Flex>\n\n\n            </Flex>\n\n\n\n        </Box>\n    )\n}","import { Text, Box } from \"@chakra-ui/react\"\nimport { useBaseContext } from \"../contexts/BaseContext\";\n\nexport function Greetings( ) {\n\n    const {  isOwner, inList } = useBaseContext()\n\n    let message = \"Hello Traveler\"\n\n    if(isOwner) {\n        message = \"Hellow Owner \\\\o/\";\n    } else if (inList) {\n        message = \"Hello Traveler your are in the club!\"\n    }\n    \n    return (\n       \n            <Text fontWeight=\"bold\" color=\"blue.500\">{message}</Text>\n\n        \n    )\n}","import { VStack, Text, Button, Input } from \"@chakra-ui/react\"\nimport { useBaseContext } from \"../contexts/BaseContext\"\nimport { toast } from 'react-toastify';\n\nimport { SubmitHandler, useForm } from 'react-hook-form'\n\ntype AddInListDataType = {\n  kycAddress: string;\n}\n\nexport function ClubComponent() {\n\n  const { kycContract, isOwner, accounts, inList, setInList, clubRate } = useBaseContext()\n\n  const { register, handleSubmit } = useForm()\n\n  const joinClub = async (_address?: string) => {\n\n    if (kycContract && accounts) {\n\n      const address = _address ? _address : accounts[0]\n\n      console.log(\"adddd\", address)\n\n      try {\n        const allowed = await kycContract.kycCompleted(address);\n\n        const littleAddress = `${address.substr(1, 4)}...${address.substr(-4)}`\n\n        if (allowed) {\n          toast.warning(`${littleAddress} is already in the list`,);\n        } else {\n\n          if (isOwner) {\n            await kycContract.setKycCompleted(address)\n          } else {\n            await kycContract.buyKyc({ value: clubRate })\n          }\n\n\n          toast.info(`${littleAddress} addeded in the list`);\n\n          if (accounts && address === accounts[0]) {\n            setInList(true)\n          }\n\n        }\n\n      } catch (err) {\n        toast.error(`Error to process this address or you are not allowed`);\n      }\n\n    }\n  }\n\n  const handleAddInList: SubmitHandler<AddInListDataType> = async (data) => {\n    joinClub(data.kycAddress)\n  }\n\n  const handleAddMySelf: SubmitHandler<{}> = async () => {\n    accounts && joinClub(accounts[0])\n  }\n\n  let message = \"Join the club to be able to buy tokens!\"\n\n  if (isOwner) {\n    message = \"You are not in the club!\"\n  }\n\n  return (\n    <VStack spacing=\"5\" align=\"flex-start\" fontWeight=\"bold\">\n\n\n      {!inList && (\n        <VStack as=\"form\" onSubmit={handleSubmit(handleAddMySelf)} spacing=\"2\" >\n          <Text >{message}</Text>\n          <Button size=\"lg\" colorScheme=\"blackAlpha\" type=\"submit\">Join Club</Button>\n          {!isOwner && <Text fontSize=\"12\" color=\"red.300\"> * Only {clubRate} wei </Text>}\n\n        </VStack>\n\n      )}\n\n\n\n      {!isOwner && !inList && (\n        <Text >You can also contact the owner to try to get in for free</Text>\n      )}\n\n      {isOwner && (\n\n        <VStack align=\"flex-start\" spacing=\"3\" as=\"form\" onSubmit={handleSubmit(handleAddInList)}>\n          <Text >Add your friends to the club</Text>\n          <Input   {...register(\"kycAddress\")} label=\"KYC Address\" type=\"text\" />\n          <Button mt=\"3\" size=\"lg\" colorScheme=\"blackAlpha\" type=\"submit\">Add address</Button>\n        </VStack>\n\n\n      )}\n    </VStack>\n  )\n}","import { VStack, Text, Input, Button } from \"@chakra-ui/react\"\nimport { useBaseContext } from \"../contexts/BaseContext\"\nimport { SubmitHandler, useForm } from 'react-hook-form'\nimport { ethers } from 'ethers'\n\n\nexport function BuyTokenComponent() {\n\n    const {  currentSupply, tokenSymbol, accounts, tokenRate,  myTokenSaleContract } = useBaseContext()\n    const { register, handleSubmit } = useForm()\n\n\n    const handleBuyTokens: SubmitHandler<{tokens: number}> = async (data) => {\n\n        if (data.tokens > 0 && accounts && myTokenSaleContract) {\n          myTokenSaleContract.buyTokens(accounts[0], {\n            value: ethers.BigNumber.from(data.tokens),\n          })\n        }\n      }\n\n    return (\n        <VStack fontWeight=\"bold\" spacing=\"5\" align=\"flex-start\">\n\n            <Text color=\"yellowgreen\">Current Token Supply {currentSupply} {tokenSymbol}</Text>\n\n            <VStack as=\"form\" onSubmit={handleSubmit(handleBuyTokens)} spacing=\"2\" align=\"flex-start\">\n                <Text>How many tokens you want to buy?</Text>\n                <Input   {...register(\"tokens\")} defaultValue=\"5\" label=\"amount\" type=\"number\" />\n                <Button size=\"lg\" colorScheme=\"blackAlpha\" type=\"submit\">Buy Tokens</Button>\n                <Text  fontSize=\"12\" color=\"red.300\"> * Only {tokenRate} wei each</Text>\n            </VStack>\n\n            <Text>You can also send weis to the following address to obtain tokens</Text>\n            <Text fontSize=\"14\" color=\"red.300\">Token value in ETH: {ethers.utils.formatUnits(tokenRate, \"ether\")}</Text>\n\n            <Text fontSize=\"14\" color=\"green.300\">Address to send wei: {myTokenSaleContract?.address}</Text>\n\n        </VStack>\n    )\n}","import { VStack, Text, Input, Button } from \"@chakra-ui/react\"\nimport { useBaseContext } from \"../contexts/BaseContext\"\nimport { SubmitHandler, useForm } from 'react-hook-form'\n\n\nexport function MineTokenComponent() {\n\n    const {  tokenSymbol, accounts, myTokenContract, myTokenSaleContract } = useBaseContext()\n    const { register, handleSubmit } = useForm()\n\n\n    const handleMineTokens: SubmitHandler<{tokens: number}> = async (data) => {\n\n        if (data.tokens > 0 && accounts && myTokenContract && myTokenSaleContract) {\n          myTokenContract.mint(myTokenSaleContract.address ,data.tokens)\n        }\n      }\n\n    return (\n        <VStack fontWeight=\"bold\" spacing=\"5\" align=\"flex-start\">\n\n            <Text>Mine {tokenSymbol} Token!</Text>\n\n            <VStack as=\"form\" onSubmit={handleSubmit(handleMineTokens)} spacing=\"2\" align=\"flex-start\">\n                <Input   {...register(\"tokens\")} defaultValue=\"5\" label=\"amount\" type=\"number\" />\n                <Button size=\"lg\" colorScheme=\"blackAlpha\" type=\"submit\">Mine Tokens</Button>\n            </VStack>\n\n        </VStack>\n    )\n}","import { Flex, Text, VStack } from '@chakra-ui/react'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Header } from \"./components/Header\";\nimport { Greetings } from \"./components/Greetings\";\nimport { ClubComponent } from \"./components/ClubComponent\";\nimport { useBaseContext } from \"./contexts/BaseContext\";\nimport { BuyTokenComponent } from \"./components/BuyTokenComponent\";\nimport { MineTokenComponent } from \"./components/MineTokenComponent\";\n\nfunction App() {\n\n  const { accounts, isOwner, loaded, inList } = useBaseContext()\n\n  console.log(\"contas\", accounts)\n\n  if (!loaded) return (<Text>Loading web3... Oi</Text>)\n\n  return (\n    <Flex\n      maxW={1400}\n      w=\"100%\"\n      h=\"100vh\"\n      mh=\"auto\"\n      direction=\"column\"\n      align=\"center\"\n\n    >\n      <Header />\n\n      <VStack pb=\"100\" maxW={1100} fontSize=\"34\" m=\"5\" spacing=\"10\" align=\"flex-start\">\n\n        <Greetings />\n\n        {inList && <BuyTokenComponent />}\n\n        <ClubComponent />\n\n        {isOwner && inList && <MineTokenComponent />}\n\n      </VStack>\n\n      <ToastContainer />\n\n    </Flex>\n  );\n\n}\n\nexport default App;\n","import { extendTheme } from '@chakra-ui/react'\n\nexport const theme = extendTheme({\n\n    styles: {\n        global: {\n            body: {\n                bg: 'gray.600',\n                color: 'gray.50'\n            }\n        }\n    }\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ChakraProvider } from '@chakra-ui/react'\nimport { theme } from \"./theme\"\nimport {BaseContextProvider} from './contexts/BaseContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider resetCSS theme={theme}>\n\n      <BaseContextProvider >\n          <App />\n      </BaseContextProvider>\n      \n    </ChakraProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}